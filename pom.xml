<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.github.668mt.web</groupId>
        <artifactId>mt-spring-starter-parent</artifactId>
        <version>3.0</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.668mt.mos</groupId>
    <artifactId>mos</artifactId>
    <version>3.0</version>
    <packaging>pom</packaging>

    <modules>
        <module>mos-dependency-parent</module>
        <module>mos-base</module>
        <module>mos-sdk</module>
        <module>mos-sdk-spring-boot-starter</module>
        <module>mos-client</module>
        <module>mos-server</module>
        <module>mos-plugin-utils</module>
        <module>assembly</module>
    </modules>
    <properties>
        <mos.version>${project.version}</mos.version>
        <sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/
        </sonatypeOssDistMgmtSnapshotsUrl>
    </properties>
    <name>mos</name>
    <url>https://github.com/668mt/mos</url>
    <description>java编写的对象存储服务</description>

    <scm>
        <tag>master</tag>
        <url>https://github.com/668mt/mos.git</url>
    </scm>
    <developers>
        <developer>
            <name>martin</name>
            <email>765936728@qq.com</email>
            <organization/>
        </developer>
    </developers>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/bin.xml</descriptor>
                        </descriptors>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.2.2</version>
                    <configuration>
                        <!-- 镜像名称，相当于执行docker build -t 命令后面跟的镜像名称 -->
                        <imageName>${project.artifactId}</imageName>
                        <!-- Dockerfile文件存放目录 -->
                        <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                        <!--                    <dockerDirectory>./</dockerDirectory>-->
                        <!-- docker远程服务器地址 -->
                        <dockerHost>http://192.168.0.104:2375</dockerHost>

                        <!-- 指定tag版本 -->
                        <!--<imageTags>
                            <imageTag>1.0</imageTag>
                        </imageTags>-->

                        <!-- build 时强制覆盖 tag，配合 imageTags 使用-->
                        <!--<forceTags>true</forceTags>-->
                        <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                    <executions>
                        <!-- 执行mvn install时，执行 build、tag 操作-->
                        <execution>
                            <id>build-image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>

                        <!-- tag 用于给镜像打标签-->
                        <!--<execution>
                            <id>tag-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <image>${project.artifactId}:latest</image>
                                <newName>${project.artifactId}:${project.version}</newName>
                            </configuration>
                        </execution>-->

                        <!-- maven执行deploy时push镜像 -->
                        <!--<execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <imageName>${project.artifactId}:${project.version}</imageName>
                            </configuration>
                        </execution>-->
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>